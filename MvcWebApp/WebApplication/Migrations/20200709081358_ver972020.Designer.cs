// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication.Dal;

namespace WebApplication.Migrations
{
    [DbContext(typeof(PatientDal))]
    [Migration("20200709081358_ver972020")]
    partial class ver972020
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication.Models.Patient", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tblPatient");
                });

            modelBuilder.Entity("WebApplication.Models.Problem1", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("patientid")
                        .HasColumnType("int");

                    b.Property<string>("problem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("patientid");

                    b.ToTable("tblProblem");
                });

            modelBuilder.Entity("WebApplication.Models.Problem1", b =>
                {
                    b.HasOne("WebApplication.Models.Patient", "patient")
                        .WithMany("problems")
                        .HasForeignKey("patientid");
                });
#pragma warning restore 612, 618
        }
    }
}
